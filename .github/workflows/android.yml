name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  cache_usage_report_file: cache_usage_report.html
  
jobs:
  cache_usage_calculate:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: 'gradle'

      # - name: Set Output Variable
      #   id: set-output
      #   run: echo "::set-output name=output::$(find ./app/src/androidTest/java/com/example -type f -name '*.kt' | grep 'cicddemoapp' | awk -F'.kt|./app/src/androidTest/java/' '{print $2}' | tr '/' '.' | tr '\n' ',' | rev | cut -c 2- | rev)"

      # - name: Use Output Variable
      #   run: echo ${{ steps.set-output.outputs.output }}

      # - name: Print var
      #   run: echo "${{steps.fileNames.outputs.output}}"
    

      - name: Start emulator, Run tests, Display cache usage
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: google_apis
          arch: x86_64
          script: |
            set -x
            adb devices
            touch app/emulator.log
            chmod 777 app/emulator.log
            # ./gradlew installDebug
            # ./gradlew :app:installDebugAndroidTest
            echo "hello"
            for (( a = 1; a <= 3; a++ ))
            do
            echo "Starting loop $a:"
            for (( b = 1; b <= 3; b++ ))
            do
            echo " Inside loop: $b"
            done
            done
            
            # output=$(find ./app/src/androidTest/java/com/example -type f -name '*.kt' | grep 'cicddemoapp' | awk -F'.kt|./app/src/androidTest/java/' '{print $2}' | tr '/' '.' | tr '\n' ',')
            # echo "$output"
            
            # IFS=',' read -ra class_names <<< "$output"
            
            # echo "Class Names: ${class_names[@]}"
            
            # for i in {1..2}; do
            #     for className in "${class_names[@]}"; do
            #         adb shell am instrument -w -e class "$className" app.test/androidx.test.runner.AndroidJUnitRunner
            #         adb shell pm clear com.example.cicddemoapp
            #     done
            # done

            # output=$(find ./app/src/androidTest/java/com/example -type f -name '*.kt' | grep 'cicddemoapp' | awk -F'.kt|./app/src/androidTest/java/' '{print $2}' | tr '/' '.' | tr '\n' ',' | rev | cut -c 2- | rev)
            # echo $output

            # IFS=',' read -ra class_names <<< $output

            # for i in {1..2}; do for className in "${class_names[@]}"; do adb shell am instrument -w -e class $className app.test/androidx.test.runner.AndroidJUnitRunner; adb shell pm clear com.example.cicddemoapp; done; done
            
            # adb logcat -d | grep "CacheSize:"
            adb logcat -d | grep "CacheSize:" >> app/emulator.log &

      - name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: cache_logs
          path: app/emulator.log
          
  #     - name : Run python script
  #       id: python_script
  #       run : |
  #         chmod +x ./.github/scripts/formatCacheUsage.py
  #         python3 ./.github/scripts/formatCacheUsage.py app/emulator.log
     
  #     - name: Upload html file
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{ env.cache_usage_report_file }}
  #         path: ${{ env.cache_usage_report_file }}
          
  # cache_usage_display:
  #   needs: cache_usage_calculate
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: ${{ env.cache_usage_report_file }}

  #     - name: Add PR comment
  #       uses: actions/github-script@v7
  #       with:
  #         script: |
  #           const fs = require('fs')
  #           const cacheLogsFileContent = fs.readFileSync('cache_usage_report.html', 'utf8')
  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: cacheLogsFileContent
  #           })
